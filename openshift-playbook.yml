---
#############################################################
# Provision AWS infrastructure
#############################################################
- name: Create Infrastructure
  hosts: local

  vars_files:
    - vars/aws-config.yml

  roles:
  - define-derived-vars
  - setup-vpc
  - setup-security-groups
  - setup-virtual-machines
  - setup-dns
  - setup-ssh
  - setup-host-groups

  pre_tasks:
    - name: Verify Ansible Version
      assert:
        that:
          - "ansible_version.major == 2"
          - "ansible_version.minor >= 4"
        msg: "This script is only supported with the 2.4.1 version or later of Ansible"

    - name: Verify App Nodes For Gluster
      assert:
        that:
          - "app_nodes >= 3"
        msg: "To install gluster you must have at least three app nodes defined, only {{app_nodes}} defined in variables"
      when: install_gluster

    - fail: msg="Variables required to register subscriptions are missing, please confirm that either rhsm_username, rhsm_password and rhsm_pool OR rhsm_key_id and rhsm_org_id is defined"
      when: (deployment_type == 'openshift-enterprise') and not (((rhsm_username is defined) and (rhsm_password is defined) and (rhsm_pool is defined)) or ((rhsm_key_id is defined) and (rhsm_org_id is defined)))

#############################################################
# Register and update virtual machines
#############################################################
- name: Setup VM hosts
  hosts: localhost

  vars_files:
    - vars/aws-config.yml

- name: Register and update virtual machines
  hosts: created_vms
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  vars:
    state: 'present'

  roles:
  - {role: register-virtual-machines, when: deployment_type == 'openshift-enterprise'}
  - update-virtual-machines

#############################################################
# Generate SSL certificates using lets encrypt, fetch to
# local system and then set ssl vars
#############################################################
- name: Generate SSL certificates
  hosts: master
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  roles:
  - define-derived-vars
  - {role: generate-ssl-certs, when: use_lets_encrypt}

#############################################################
# Copy SSL certificates to bastion
#############################################################
- name: Copy SSL certificates to bastion
  hosts: bastion
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  roles:
  - define-derived-vars

  post_tasks:
    - name: create directory for certs
      file: path=certs/{{public_master_dns}} state=directory

    - name: create directory for certs
      file: path=certs/{{public_subdomain_prefix}}.{{public_dns_zone}} state=directory

    - name: copy master SSL certificates to bastion
      copy:
        src: "{{item}}"
        dest: certs/{{public_master_dns}}/{{item | basename}}
      with_items:
        - "{{master_ssl_cert_file}}"
        - "{{master_ssl_key_file}}"
        - "{{master_ssl_ca_file}}"
      when: master_ssl_cert_file is defined

    - name: copy wildcard SSL certificates to bastion
      copy:
        src: "{{item}}"
        dest: certs/{{public_subdomain_prefix}}.{{public_dns_zone}}/{{item | basename}}
      with_items:
        - "{{wildcard_ssl_cert_file}}"
        - "{{wildcard_ssl_key_file}}"
        - "{{wildcard_ssl_fullchain_file}}"
      when: wildcard_ssl_cert_file is defined

#############################################################
# Openshift Prerequisites
#############################################################
- name: Setup Node hosts
  hosts: localhost

  vars_files:
    - vars/aws-config.yml

- name: OpenShift Prerequisites
  hosts: created_nodes
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  vars:
    state: 'present'

  roles:
  - openshift-pre-reqs

#############################################################
# Gluster Prerequisites
#############################################################
- name: Setup gluster master prereqs
  hosts: master
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  roles:
  - {role: gluster-master-prereqs, when: install_gluster}

- name: Setup gluster node prereqs
  hosts: gluster
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  roles:
  - {role: gluster-node-prereqs, when: install_gluster}

#############################################################
# Install Openshift
#############################################################
- name: Install OpenShift
  hosts: bastion
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  vars:
#    nodes: "{{ lookup('file','nodes.json') | from_json }}"

  roles:
  - define-derived-vars
  - openshift-install
  - {role: grafana-install, when: install_grafana}

#############################################################
# Post-install tasks
#############################################################
- name: Post-Install tasks
  hosts: master
  remote_user: "{{ amazon_user }}"

  vars_files:
    - vars/aws-config.yml

  post_tasks:
   - name: SSL certificate information
     debug:
       msg:
         - 'SSL certificates have been generated using letsencrypt and backed up locally:'
         - '\tcerts/letsencrypt\n'
         - 'Note that letsencrypt is rate limited to 20 requests a week and SSL certificates last for 90 days.'
         - 'If you need to run the playbook again, consider using the certificates backed up locally by'
         - 'setting the following variables in vars/aws_config.yml'
         - '\tmaster_ssl_cert_file: "{{master_ssl_cert_file}}"'
         - '\tmaster_ssl_key_file: "{{master_ssl_key_file}}"'
         - '\master_ssl_ca_file: "{{master_ssl_ca_file}}"'
         - '\wildcard_ssl_cert_file: "{{wildcard_ssl_cert_file}}"'
         - '\twildcard_ssl_key_file: "{{wildcard_ssl_key_file}}"'
         - '\twildcard_ssl_fullchain_file: "{{wildcard_ssl_fullchain_file}}"'
     when: use_lets_encrypt

  roles:
  - define-derived-vars
  - add-users
  - {role: update-ssl-cockpit, when: master_ssl_cert_file is defined}
  - {role: disable-service-catalog, when: disable_service_catalog}
  - {role: wetty-install, when: master_ssl_cert_file is defined}

#############################################################
# Output environment information
#############################################################
- name: OpenShift Information
  hosts: localhost

  vars_files:
    - vars/aws-config.yml

  roles:
  - define-derived-vars

  post_tasks:
   - name: Confirmation message
     debug:
      msg:
        - 'The script has completed successfully.'
        - 'Master public IP: {{master_public_ip}}'
        - 'OpenShift console: https://{{public_master_dns}}:8443'
