---
- name: Add users
  include: add-user.yml user={{ item }}
  with_items: "{{ users }}"

- name: Create generic users dictionary
  set_fact:
    #generic_users: '{{generic_users|combine( {"name": generic_user_prefix+item, "admin":false, "password": generic_user_password} ) }}'
    generic_users: "{{ generic_users|default([]) + [ {'name': generic_user_prefix + item, 'admin': false, 'password': generic_user_password} ] }}"
  with_sequence: count={{generic_user_count}} format="%02d"
  when: create_generic_user

- name: Add generic users
  include: add-user.yml user={{ item }}
  with_items: "{{ generic_users }}"
  when: create_generic_user

- name: Add generic users
  shell: /usr/bin/htpasswd -b {{ htpasswd_path }} {{ generic_user_prefix }}{{ item }} {{ generic_pass_prefix }}{{ item }}
  with_sequence: count={{ generic_user_count }}
  become: true
  when: create_generic_user

- name: install python passlib
  pip: name=passlib state=present
  become: true
  when: cockpit_password is defined and cockpit_password|length>0

- name: Add "{{amazon_user}}" password
  user:
    name: "{{amazon_user}}"
    password: "{{ cockpit_password | password_hash('sha512') }}"
  become: true
  when: cockpit_password is defined and cockpit_password|length>0

# - name: Add admin accounts to master for Cockpit
#   shell: "useradd --home /home/{{item.name}} {{item.name}} && echo {{item.name}}:{{item.password}} | chpasswd â€“crypt-method=SHA512"
#   when: item.admin
#   with_items: "{{ users }}"
#   become: true

# - name: oc login as admin users for cockpit to work
#   shell: "oc login -u {{item.name}} -p {{item.password}} https://localhost:8443 --insecure-skip-tls-verify=true"
#   when: item.admin
#   with_items: "{{ users }}"
#   sudo: true
#   sudo_user: "{{item.name}}"
