---

- name: generate master ssl certificate
  command: >-
    docker run --rm --name certbot
    -v "/etc/letsencrypt:/etc/letsencrypt:z"
    -v "/var/lib/letsencrypt:/var/lib/letsencrypt:z"
    -e AWS_ACCESS_KEY_ID={{ lookup('env', 'AWS_ACCESS_KEY_ID') }}
    -e AWS_SECRET_ACCESS_KEY={{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}
    certbot/dns-route53 certonly
    --non-interactive
    --agree-tos
    --email "{{ domain_email_address }}"
    --dns-route53
    --dns-route53-propagation-seconds 30
    --domain "{{ public_master_dns }}"
  args:
    creates: /etc/letsencrypt/live/{{ public_master_dns }}
  become: true

- name: generate wildcard ssl certificate
  command: >-
    docker run --rm --name certbot
    -v "/etc/letsencrypt:/etc/letsencrypt:z"
    -v "/var/lib/letsencrypt:/var/lib/letsencrypt:z"
    -e AWS_ACCESS_KEY_ID={{ lookup('env', 'AWS_ACCESS_KEY_ID') }}
    -e AWS_SECRET_ACCESS_KEY={{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}
    certbot/dns-route53 certonly
    --non-interactive
    --agree-tos
    --email "{{ domain_email_address }}"
    --dns-route53
    --dns-route53-propagation-seconds 30
    --server https://acme-v02.api.letsencrypt.org/directory
    --domain "*.{{public_subdomain_prefix}}.{{public_dns_zone}}"
  args:
    creates: /etc/letsencrypt/live/{{public_subdomain_prefix}}.{{public_dns_zone}}
  become: true

- name: set access to the certs
  acl:
    path: "/etc/letsencrypt"
    entity: "{{ amazon_user }}"
    etype: user
    permissions: rx
    recursive: yes
    follow: yes
    state: present
  become: true

- name: fetch master ssl certificates
  fetch:
    src: /etc/letsencrypt/live/{{public_master_dns}}/{{item}}
    dest: certs/letsencrypt/{{public_master_dns}}/{{item}}
    flat: true
  become: true
  with_items:
    - cert.pem
    - chain.pem
    - fullchain.pem
    - privkey.pem

- name: fetch wildcard ssl certificates
  fetch:
    src: /etc/letsencrypt/live/{{public_subdomain_prefix}}.{{public_dns_zone}}/{{item}}
    dest: certs/letsencrypt/{{public_subdomain_prefix}}.{{public_dns_zone}}/{{item}}
    flat: true
  become: true
  with_items:
    - cert.pem
    - chain.pem
    - fullchain.pem
    - privkey.pem
